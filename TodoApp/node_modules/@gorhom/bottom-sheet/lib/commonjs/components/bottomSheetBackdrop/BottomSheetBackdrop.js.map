{"version":3,"sources":["BottomSheetBackdrop.tsx"],"names":["BottomSheetBackdropComponent","animatedIndex","opacity","_providedOpacity","appearsOnIndex","_providedAppearsOnIndex","disappearsOnIndex","_providedDisappearsOnIndex","enableTouchThrough","_providedEnableTouchThrough","pressBehavior","DEFAULT_PRESS_BEHAVIOR","onPress","style","children","accessible","_providedAccessible","DEFAULT_ACCESSIBLE","accessibilityRole","_providedAccessibilityRole","DEFAULT_ACCESSIBILITY_ROLE","accessibilityLabel","_providedAccessibilityLabel","DEFAULT_ACCESSIBILITY_LABEL","accessibilityHint","_providedAccessibilityHint","DEFAULT_ACCESSIBILITY_HINT","snapToIndex","close","isMounted","DEFAULT_OPACITY","DEFAULT_APPEARS_ON_INDEX","DEFAULT_DISAPPEARS_ON_INDEX","DEFAULT_ENABLE_TOUCH_THROUGH","pointerEvents","setPointerEvents","handleOnPress","handleContainerTouchability","shouldDisableTouchability","current","gestureHandler","onFinish","containerAnimatedStyle","value","Extrapolate","CLAMP","flex","containerStyle","styles","container","previous","AnimatedView","undefined","BottomSheetBackdrop","displayName"],"mappings":"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","sourcesContent":["import React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { ViewProps } from 'react-native';\nimport Animated, {\n  interpolate,\n  Extrapolate,\n  useAnimatedStyle,\n  useAnimatedReaction,\n  useAnimatedGestureHandler,\n  runOnJS,\n} from 'react-native-reanimated';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport { useBottomSheet } from '../../hooks';\nimport {\n  DEFAULT_OPACITY,\n  DEFAULT_APPEARS_ON_INDEX,\n  DEFAULT_DISAPPEARS_ON_INDEX,\n  DEFAULT_ENABLE_TOUCH_THROUGH,\n  DEFAULT_PRESS_BEHAVIOR,\n  DEFAULT_ACCESSIBLE,\n  DEFAULT_ACCESSIBILITY_ROLE,\n  DEFAULT_ACCESSIBILITY_LABEL,\n  DEFAULT_ACCESSIBILITY_HINT,\n} from './constants';\nimport { styles } from './styles';\nimport type { BottomSheetDefaultBackdropProps } from './types';\n\nconst BottomSheetBackdropComponent = ({\n  animatedIndex,\n  opacity: _providedOpacity,\n  appearsOnIndex: _providedAppearsOnIndex,\n  disappearsOnIndex: _providedDisappearsOnIndex,\n  enableTouchThrough: _providedEnableTouchThrough,\n  pressBehavior = DEFAULT_PRESS_BEHAVIOR,\n  onPress,\n  style,\n  children,\n  accessible: _providedAccessible = DEFAULT_ACCESSIBLE,\n  accessibilityRole: _providedAccessibilityRole = DEFAULT_ACCESSIBILITY_ROLE,\n  accessibilityLabel: _providedAccessibilityLabel = DEFAULT_ACCESSIBILITY_LABEL,\n  accessibilityHint: _providedAccessibilityHint = DEFAULT_ACCESSIBILITY_HINT,\n}: BottomSheetDefaultBackdropProps) => {\n  //#region hooks\n  const { snapToIndex, close } = useBottomSheet();\n  const isMounted = useRef(false);\n  //#endregion\n\n  //#region defaults\n  const opacity = _providedOpacity ?? DEFAULT_OPACITY;\n  const appearsOnIndex = _providedAppearsOnIndex ?? DEFAULT_APPEARS_ON_INDEX;\n  const disappearsOnIndex =\n    _providedDisappearsOnIndex ?? DEFAULT_DISAPPEARS_ON_INDEX;\n  const enableTouchThrough =\n    _providedEnableTouchThrough ?? DEFAULT_ENABLE_TOUCH_THROUGH;\n  //#endregion\n\n  //#region variables\n  const [pointerEvents, setPointerEvents] = useState<\n    ViewProps['pointerEvents']\n  >(enableTouchThrough ? 'none' : 'auto');\n  //#endregion\n\n  //#region callbacks\n  const handleOnPress = useCallback(() => {\n    onPress?.();\n\n    if (pressBehavior === 'close') {\n      close();\n    } else if (pressBehavior === 'collapse') {\n      snapToIndex(disappearsOnIndex as number);\n    } else if (typeof pressBehavior === 'number') {\n      snapToIndex(pressBehavior);\n    }\n  }, [snapToIndex, close, disappearsOnIndex, pressBehavior, onPress]);\n  const handleContainerTouchability = useCallback(\n    (shouldDisableTouchability: boolean) => {\n      isMounted.current &&\n        setPointerEvents(shouldDisableTouchability ? 'none' : 'auto');\n    },\n    []\n  );\n  //#endregion\n\n  //#region tap gesture\n  const gestureHandler =\n    useAnimatedGestureHandler<TapGestureHandlerGestureEvent>(\n      {\n        onFinish: () => {\n          runOnJS(handleOnPress)();\n        },\n      },\n      [handleOnPress]\n    );\n  //#endregion\n\n  //#region styles\n  const containerAnimatedStyle = useAnimatedStyle(() => ({\n    opacity: interpolate(\n      animatedIndex.value,\n      [-1, disappearsOnIndex, appearsOnIndex],\n      [0, 0, opacity],\n      Extrapolate.CLAMP\n    ),\n    flex: 1,\n  }));\n  const containerStyle = useMemo(\n    () => [styles.container, style, containerAnimatedStyle],\n    [style, containerAnimatedStyle]\n  );\n  //#endregion\n\n  //#region effects\n  useAnimatedReaction(\n    () => animatedIndex.value <= disappearsOnIndex,\n    (shouldDisableTouchability, previous) => {\n      if (shouldDisableTouchability === previous) {\n        return;\n      }\n      runOnJS(handleContainerTouchability)(shouldDisableTouchability);\n    },\n    [disappearsOnIndex]\n  );\n\n  // addressing updating the state after unmounting.\n  // [link](https://github.com/gorhom/react-native-bottom-sheet/issues/1376)\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  //#endregion\n\n  const AnimatedView = (\n    <Animated.View\n      style={containerStyle}\n      pointerEvents={pointerEvents}\n      accessible={_providedAccessible ?? undefined}\n      accessibilityRole={_providedAccessibilityRole ?? undefined}\n      accessibilityLabel={_providedAccessibilityLabel ?? undefined}\n      accessibilityHint={\n        _providedAccessibilityHint\n          ? _providedAccessibilityHint\n          : `Tap to ${\n              typeof pressBehavior === 'string' ? pressBehavior : 'move'\n            } the Bottom Sheet`\n      }\n    >\n      {children}\n    </Animated.View>\n  );\n\n  return pressBehavior !== 'none' ? (\n    <TapGestureHandler onGestureEvent={gestureHandler}>\n      {AnimatedView}\n    </TapGestureHandler>\n  ) : (\n    AnimatedView\n  );\n};\n\nconst BottomSheetBackdrop = memo(BottomSheetBackdropComponent);\nBottomSheetBackdrop.displayName = 'BottomSheetBackdrop';\n\nexport default BottomSheetBackdrop;\n"]}
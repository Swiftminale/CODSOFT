{"version":3,"sources":["BottomSheetBackdrop.tsx"],"names":["React","memo","useCallback","useEffect","useMemo","useRef","useState","Animated","interpolate","Extrapolate","useAnimatedStyle","useAnimatedReaction","useAnimatedGestureHandler","runOnJS","TapGestureHandler","useBottomSheet","DEFAULT_OPACITY","DEFAULT_APPEARS_ON_INDEX","DEFAULT_DISAPPEARS_ON_INDEX","DEFAULT_ENABLE_TOUCH_THROUGH","DEFAULT_PRESS_BEHAVIOR","DEFAULT_ACCESSIBLE","DEFAULT_ACCESSIBILITY_ROLE","DEFAULT_ACCESSIBILITY_LABEL","DEFAULT_ACCESSIBILITY_HINT","styles","BottomSheetBackdropComponent","animatedIndex","opacity","_providedOpacity","appearsOnIndex","_providedAppearsOnIndex","disappearsOnIndex","_providedDisappearsOnIndex","enableTouchThrough","_providedEnableTouchThrough","pressBehavior","onPress","style","children","accessible","_providedAccessible","accessibilityRole","_providedAccessibilityRole","accessibilityLabel","_providedAccessibilityLabel","accessibilityHint","_providedAccessibilityHint","snapToIndex","close","isMounted","pointerEvents","setPointerEvents","handleOnPress","handleContainerTouchability","shouldDisableTouchability","current","gestureHandler","onFinish","containerAnimatedStyle","value","CLAMP","flex","containerStyle","container","previous","AnimatedView","undefined","BottomSheetBackdrop","displayName"],"mappings":"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","sourcesContent":["import React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { ViewProps } from 'react-native';\nimport Animated, {\n  interpolate,\n  Extrapolate,\n  useAnimatedStyle,\n  useAnimatedReaction,\n  useAnimatedGestureHandler,\n  runOnJS,\n} from 'react-native-reanimated';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport { useBottomSheet } from '../../hooks';\nimport {\n  DEFAULT_OPACITY,\n  DEFAULT_APPEARS_ON_INDEX,\n  DEFAULT_DISAPPEARS_ON_INDEX,\n  DEFAULT_ENABLE_TOUCH_THROUGH,\n  DEFAULT_PRESS_BEHAVIOR,\n  DEFAULT_ACCESSIBLE,\n  DEFAULT_ACCESSIBILITY_ROLE,\n  DEFAULT_ACCESSIBILITY_LABEL,\n  DEFAULT_ACCESSIBILITY_HINT,\n} from './constants';\nimport { styles } from './styles';\nimport type { BottomSheetDefaultBackdropProps } from './types';\n\nconst BottomSheetBackdropComponent = ({\n  animatedIndex,\n  opacity: _providedOpacity,\n  appearsOnIndex: _providedAppearsOnIndex,\n  disappearsOnIndex: _providedDisappearsOnIndex,\n  enableTouchThrough: _providedEnableTouchThrough,\n  pressBehavior = DEFAULT_PRESS_BEHAVIOR,\n  onPress,\n  style,\n  children,\n  accessible: _providedAccessible = DEFAULT_ACCESSIBLE,\n  accessibilityRole: _providedAccessibilityRole = DEFAULT_ACCESSIBILITY_ROLE,\n  accessibilityLabel: _providedAccessibilityLabel = DEFAULT_ACCESSIBILITY_LABEL,\n  accessibilityHint: _providedAccessibilityHint = DEFAULT_ACCESSIBILITY_HINT,\n}: BottomSheetDefaultBackdropProps) => {\n  //#region hooks\n  const { snapToIndex, close } = useBottomSheet();\n  const isMounted = useRef(false);\n  //#endregion\n\n  //#region defaults\n  const opacity = _providedOpacity ?? DEFAULT_OPACITY;\n  const appearsOnIndex = _providedAppearsOnIndex ?? DEFAULT_APPEARS_ON_INDEX;\n  const disappearsOnIndex =\n    _providedDisappearsOnIndex ?? DEFAULT_DISAPPEARS_ON_INDEX;\n  const enableTouchThrough =\n    _providedEnableTouchThrough ?? DEFAULT_ENABLE_TOUCH_THROUGH;\n  //#endregion\n\n  //#region variables\n  const [pointerEvents, setPointerEvents] = useState<\n    ViewProps['pointerEvents']\n  >(enableTouchThrough ? 'none' : 'auto');\n  //#endregion\n\n  //#region callbacks\n  const handleOnPress = useCallback(() => {\n    onPress?.();\n\n    if (pressBehavior === 'close') {\n      close();\n    } else if (pressBehavior === 'collapse') {\n      snapToIndex(disappearsOnIndex as number);\n    } else if (typeof pressBehavior === 'number') {\n      snapToIndex(pressBehavior);\n    }\n  }, [snapToIndex, close, disappearsOnIndex, pressBehavior, onPress]);\n  const handleContainerTouchability = useCallback(\n    (shouldDisableTouchability: boolean) => {\n      isMounted.current &&\n        setPointerEvents(shouldDisableTouchability ? 'none' : 'auto');\n    },\n    []\n  );\n  //#endregion\n\n  //#region tap gesture\n  const gestureHandler =\n    useAnimatedGestureHandler<TapGestureHandlerGestureEvent>(\n      {\n        onFinish: () => {\n          runOnJS(handleOnPress)();\n        },\n      },\n      [handleOnPress]\n    );\n  //#endregion\n\n  //#region styles\n  const containerAnimatedStyle = useAnimatedStyle(() => ({\n    opacity: interpolate(\n      animatedIndex.value,\n      [-1, disappearsOnIndex, appearsOnIndex],\n      [0, 0, opacity],\n      Extrapolate.CLAMP\n    ),\n    flex: 1,\n  }));\n  const containerStyle = useMemo(\n    () => [styles.container, style, containerAnimatedStyle],\n    [style, containerAnimatedStyle]\n  );\n  //#endregion\n\n  //#region effects\n  useAnimatedReaction(\n    () => animatedIndex.value <= disappearsOnIndex,\n    (shouldDisableTouchability, previous) => {\n      if (shouldDisableTouchability === previous) {\n        return;\n      }\n      runOnJS(handleContainerTouchability)(shouldDisableTouchability);\n    },\n    [disappearsOnIndex]\n  );\n\n  // addressing updating the state after unmounting.\n  // [link](https://github.com/gorhom/react-native-bottom-sheet/issues/1376)\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  //#endregion\n\n  const AnimatedView = (\n    <Animated.View\n      style={containerStyle}\n      pointerEvents={pointerEvents}\n      accessible={_providedAccessible ?? undefined}\n      accessibilityRole={_providedAccessibilityRole ?? undefined}\n      accessibilityLabel={_providedAccessibilityLabel ?? undefined}\n      accessibilityHint={\n        _providedAccessibilityHint\n          ? _providedAccessibilityHint\n          : `Tap to ${\n              typeof pressBehavior === 'string' ? pressBehavior : 'move'\n            } the Bottom Sheet`\n      }\n    >\n      {children}\n    </Animated.View>\n  );\n\n  return pressBehavior !== 'none' ? (\n    <TapGestureHandler onGestureEvent={gestureHandler}>\n      {AnimatedView}\n    </TapGestureHandler>\n  ) : (\n    AnimatedView\n  );\n};\n\nconst BottomSheetBackdrop = memo(BottomSheetBackdropComponent);\nBottomSheetBackdrop.displayName = 'BottomSheetBackdrop';\n\nexport default BottomSheetBackdrop;\n"]}